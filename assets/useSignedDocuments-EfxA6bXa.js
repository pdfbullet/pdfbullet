import{r as i}from"./main-D3y6oKuj.js";const A="ilovepdflyDB",E=2,o="signedDocuments",g="lastTasks";let w=null;const D=()=>(w||(w=new Promise((m,b)=>{const r=indexedDB.open(A,E);r.onerror=()=>b(r.error),r.onsuccess=()=>m(r.result),r.onupgradeneeded=l=>{const e=l.target.result;e.objectStoreNames.contains(o)||e.createObjectStore(o,{keyPath:"id"}),e.objectStoreNames.contains(g)||e.createObjectStore(g,{keyPath:"id"})}})),w),B=()=>{const[m,b]=i.useState([]),[r,l]=i.useState(!0),e=i.useCallback(async()=>{l(!0);try{const u=(await D()).transaction(o,"readonly").objectStore(o),a=await new Promise((d,s)=>{const t=u.getAll();t.onsuccess=()=>d(t.result),t.onerror=()=>s(t.error)});b(a.sort((d,s)=>s.createdAt-d.createdAt))}catch(n){console.error("Failed to load signed documents from IndexedDB",n)}finally{l(!1)}},[]);i.useEffect(()=>{e()},[e]);const x=i.useCallback(async n=>{const c=Date.now(),u={...n,id:c,createdAt:c};try{const s=(await D()).transaction(o,"readwrite").objectStore(o);await new Promise((t,y)=>{const S=s.add(u);S.onsuccess=()=>t(),S.onerror=()=>y(S.error)}),await e()}catch(a){console.error("Failed to add signed document to IndexedDB",a)}},[e]),f=i.useCallback(async n=>{try{const a=(await D()).transaction(o,"readwrite").objectStore(o);await new Promise((d,s)=>{const t=a.delete(n);t.onsuccess=()=>d(),t.onerror=()=>s(t.error)}),await e()}catch(c){console.error("Failed to delete signed document from IndexedDB",c)}},[e]);return{documents:m,loading:r,addSignedDocument:x,deleteSignedDocument:f}};export{B as u};
