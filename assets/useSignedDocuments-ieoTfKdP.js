import{r as a}from"./main-CkvTh2wP.js";import{g as u}from"./useLastTasks-D35mpske.js";const d="signedDocuments",A=()=>{const[w,b]=a.useState([]),[D,m]=a.useState(!0),o=a.useCallback(async()=>{m(!0);try{const i=(await u()).transaction(d,"readonly").objectStore(d),n=await new Promise((c,t)=>{const e=i.getAll();e.onsuccess=()=>c(e.result),e.onerror=()=>t(e.error)});b(n.sort((c,t)=>t.createdAt-c.createdAt))}catch(r){console.error("Failed to load signed documents from IndexedDB",r)}finally{m(!1)}},[]);a.useEffect(()=>{o()},[o]);const g=a.useCallback(async r=>{const s=Date.now(),i={...r,id:s,createdAt:s};try{const t=(await u()).transaction(d,"readwrite").objectStore(d);await new Promise((e,S)=>{const l=t.add(i);l.onsuccess=()=>e(),l.onerror=()=>S(l.error)}),await o()}catch(n){console.error("Failed to add signed document to IndexedDB",n)}},[o]),x=a.useCallback(async r=>{try{const n=(await u()).transaction(d,"readwrite").objectStore(d);await new Promise((c,t)=>{const e=n.delete(r);e.onsuccess=()=>c(),e.onerror=()=>t(e.error)}),await o()}catch(s){console.error("Failed to delete signed document from IndexedDB",s)}},[o]);return{documents:w,loading:D,addSignedDocument:g,deleteSignedDocument:x}};export{A as u};
